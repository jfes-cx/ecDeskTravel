<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duoc.mappers.AlumnoMapper">
  <resultMap id="BaseResultMap" type="com.duoc.domain.Alumno">
    <id column="IDALUMNO" jdbcType="DECIMAL" property="idalumno" />
    <result column="IDAPODERADO" jdbcType="DECIMAL" property="idapoderado" />
    <result column="IDCURSO" jdbcType="DECIMAL" property="idcurso" />
    <result column="NOMBRE" jdbcType="VARCHAR" property="nombre" />
    <result column="DIRECCION" jdbcType="VARCHAR" property="direccion" />
    <result column="TELEFONO" jdbcType="DECIMAL" property="telefono" />
    <result column="CORREOELECTRONICO" jdbcType="VARCHAR" property="correoelectronico" />
    <result column="RUT" jdbcType="VARCHAR" property="rut" />
    <result column="APELLIDOS" jdbcType="VARCHAR" property="apellidos" />
  </resultMap>
  
  <resultMap id="AlumnoMap" type="com.duoc.domain.Alumno">
    <id column="IDALUMNO" jdbcType="DECIMAL" property="idalumno" />
    <result column="IDAPODERADO" jdbcType="DECIMAL" property="idapoderado" />
    <result column="IDCURSO" jdbcType="DECIMAL" property="idcurso" />
    <result column="NOMBRE" jdbcType="VARCHAR" property="nombre" />
    <result column="DIRECCION" jdbcType="VARCHAR" property="direccion" />
    <result column="TELEFONO" jdbcType="DECIMAL" property="telefono" />
    <result column="CORREOELECTRONICO" jdbcType="VARCHAR" property="correoelectronico" />
    <result column="RUT" jdbcType="VARCHAR" property="rut" />
    <result column="APELLIDOS" jdbcType="VARCHAR" property="apellidos" />
  </resultMap>
  
   <parameterMap id="map_par_albycurso" type="com.duoc.domain.Alumno">
    <parameter property="result" jdbcType="CURSOR" mode="OUT" resultMap="AlumnoMap"  />
    <parameter property="idcurso" jdbcType="DECIMAL" mode="IN"  />
  </parameterMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    IDALUMNO, IDAPODERADO, IDCURSO, NOMBRE, DIRECCION, TELEFONO, CORREOELECTRONICO, RUT, 
    APELLIDOS
  </sql>
  <select id="selectByExample" parameterType="com.duoc.domain.AlumnoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ALUMNO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="findAllAlumnos"  resultMap="BaseResultMap">
    	select  * from ALUMNO
  </select>

<select 
id="OBTENER_ALUMNO_BYCUR" 
statementType="CALLABLE" 
parameterType="java.util.Map">
   {CALL OBTENER_ALUMNO_BYCUR(
   #{alumnos_cursor,mode=OUT,jdbcType=CURSOR,javaType=ResultSet,resultMap=AlumnoMap},#{idCurso,jdbcType=DECIMAL,mode=IN})}  
</select>

  <select id="selectByPrimaryKey" parameterType="com.duoc.domain.AlumnoKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ALUMNO
    where IDALUMNO = #{idalumno,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.duoc.domain.AlumnoKey">
    delete from ALUMNO
    where IDALUMNO = #{idalumno,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.duoc.domain.AlumnoCriteria">
    delete from ALUMNO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duoc.domain.Alumno">
    insert into ALUMNO (IDALUMNO, IDAPODERADO, IDCURSO, 
      NOMBRE, DIRECCION, TELEFONO, 
      CORREOELECTRONICO, RUT, APELLIDOS
      )
    values (#{idalumno,jdbcType=DECIMAL}, #{idapoderado,jdbcType=DECIMAL}, #{idcurso,jdbcType=DECIMAL}, 
      #{nombre,jdbcType=VARCHAR}, #{direccion,jdbcType=VARCHAR}, #{telefono,jdbcType=DECIMAL}, 
      #{correoelectronico,jdbcType=VARCHAR}, #{rut,jdbcType=VARCHAR}, #{apellidos,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.duoc.domain.Alumno">
    insert into ALUMNO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idalumno != null">
        IDALUMNO,
      </if>
      <if test="idapoderado != null">
        IDAPODERADO,
      </if>
      <if test="idcurso != null">
        IDCURSO,
      </if>
      <if test="nombre != null">
        NOMBRE,
      </if>
      <if test="direccion != null">
        DIRECCION,
      </if>
      <if test="telefono != null">
        TELEFONO,
      </if>
      <if test="correoelectronico != null">
        CORREOELECTRONICO,
      </if>
      <if test="rut != null">
        RUT,
      </if>
      <if test="apellidos != null">
        APELLIDOS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idalumno != null">
        #{idalumno,jdbcType=DECIMAL},
      </if>
      <if test="idapoderado != null">
        #{idapoderado,jdbcType=DECIMAL},
      </if>
      <if test="idcurso != null">
        #{idcurso,jdbcType=DECIMAL},
      </if>
      <if test="nombre != null">
        #{nombre,jdbcType=VARCHAR},
      </if>
      <if test="direccion != null">
        #{direccion,jdbcType=VARCHAR},
      </if>
      <if test="telefono != null">
        #{telefono,jdbcType=DECIMAL},
      </if>
      <if test="correoelectronico != null">
        #{correoelectronico,jdbcType=VARCHAR},
      </if>
      <if test="rut != null">
        #{rut,jdbcType=VARCHAR},
      </if>
      <if test="apellidos != null">
        #{apellidos,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duoc.domain.AlumnoCriteria" resultType="java.lang.Long">
    select count(*) from ALUMNO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ALUMNO
    <set>
      <if test="record.idalumno != null">
        IDALUMNO = #{record.idalumno,jdbcType=DECIMAL},
      </if>
      <if test="record.idapoderado != null">
        IDAPODERADO = #{record.idapoderado,jdbcType=DECIMAL},
      </if>
      <if test="record.idcurso != null">
        IDCURSO = #{record.idcurso,jdbcType=DECIMAL},
      </if>
      <if test="record.nombre != null">
        NOMBRE = #{record.nombre,jdbcType=VARCHAR},
      </if>
      <if test="record.direccion != null">
        DIRECCION = #{record.direccion,jdbcType=VARCHAR},
      </if>
      <if test="record.telefono != null">
        TELEFONO = #{record.telefono,jdbcType=DECIMAL},
      </if>
      <if test="record.correoelectronico != null">
        CORREOELECTRONICO = #{record.correoelectronico,jdbcType=VARCHAR},
      </if>
      <if test="record.rut != null">
        RUT = #{record.rut,jdbcType=VARCHAR},
      </if>
      <if test="record.apellidos != null">
        APELLIDOS = #{record.apellidos,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ALUMNO
    set IDALUMNO = #{record.idalumno,jdbcType=DECIMAL},
      IDAPODERADO = #{record.idapoderado,jdbcType=DECIMAL},
      IDCURSO = #{record.idcurso,jdbcType=DECIMAL},
      NOMBRE = #{record.nombre,jdbcType=VARCHAR},
      DIRECCION = #{record.direccion,jdbcType=VARCHAR},
      TELEFONO = #{record.telefono,jdbcType=DECIMAL},
      CORREOELECTRONICO = #{record.correoelectronico,jdbcType=VARCHAR},
      RUT = #{record.rut,jdbcType=VARCHAR},
      APELLIDOS = #{record.apellidos,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duoc.domain.Alumno">
    update ALUMNO
    <set>
      <if test="idapoderado != null">
        IDAPODERADO = #{idapoderado,jdbcType=DECIMAL},
      </if>
      <if test="idcurso != null">
        IDCURSO = #{idcurso,jdbcType=DECIMAL},
      </if>
      <if test="nombre != null">
        NOMBRE = #{nombre,jdbcType=VARCHAR},
      </if>
      <if test="direccion != null">
        DIRECCION = #{direccion,jdbcType=VARCHAR},
      </if>
      <if test="telefono != null">
        TELEFONO = #{telefono,jdbcType=DECIMAL},
      </if>
      <if test="correoelectronico != null">
        CORREOELECTRONICO = #{correoelectronico,jdbcType=VARCHAR},
      </if>
      <if test="rut != null">
        RUT = #{rut,jdbcType=VARCHAR},
      </if>
      <if test="apellidos != null">
        APELLIDOS = #{apellidos,jdbcType=VARCHAR},
      </if>
    </set>
    where IDALUMNO = #{idalumno,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duoc.domain.Alumno">
    update ALUMNO
    set IDAPODERADO = #{idapoderado,jdbcType=DECIMAL},
      IDCURSO = #{idcurso,jdbcType=DECIMAL},
      NOMBRE = #{nombre,jdbcType=VARCHAR},
      DIRECCION = #{direccion,jdbcType=VARCHAR},
      TELEFONO = #{telefono,jdbcType=DECIMAL},
      CORREOELECTRONICO = #{correoelectronico,jdbcType=VARCHAR},
      RUT = #{rut,jdbcType=VARCHAR},
      APELLIDOS = #{apellidos,jdbcType=VARCHAR}
    where IDALUMNO = #{idalumno,jdbcType=DECIMAL}
  </update>
</mapper>