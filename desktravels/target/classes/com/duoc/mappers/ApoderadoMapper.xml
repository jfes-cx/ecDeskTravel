<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duoc.mappers.ApoderadoMapper">
    <resultMap id="BaseResultMap" type="com.duoc.domain.Apoderado">
        <id column="IDAPODERADO" jdbcType="DECIMAL" property="idapoderado" />
        <result column="NOMBRE" jdbcType="VARCHAR" property="nombre" />
        <result column="RUT" jdbcType="NCHAR" property="rut" />
        <result column="DIRECCION" jdbcType="VARCHAR" property="direccion" />
        <result column="TELEFONO" jdbcType="DECIMAL" property="telefono" />
        <result column="CELULAR" jdbcType="NCHAR" property="celular" />
        <result column="APELLIDOS" jdbcType="VARCHAR" property="apellidos" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        IDAPODERADO, NOMBRE, RUT, DIRECCION, TELEFONO, CELULAR, APELLIDOS
    </sql>
    <select id="selectByExample" parameterType="com.duoc.domain.ApoderadoCriteria" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from APODERADO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="com.duoc.domain.ApoderadoKey" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from APODERADO
        where IDAPODERADO = #{idapoderado,jdbcType=DECIMAL}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.duoc.domain.ApoderadoKey">
        delete from APODERADO
        where IDAPODERADO = #{idapoderado,jdbcType=DECIMAL}
    </delete>
    <delete id="deleteByExample" parameterType="com.duoc.domain.ApoderadoCriteria">
        delete from APODERADO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.duoc.domain.Apoderado">
        insert into APODERADO (IDAPODERADO, NOMBRE, RUT, 
        DIRECCION, TELEFONO, CELULAR, 
        APELLIDOS)
        values (#{idapoderado,jdbcType=DECIMAL}, #{nombre,jdbcType=VARCHAR}, #{rut,jdbcType=NCHAR}, 
        #{direccion,jdbcType=VARCHAR}, #{telefono,jdbcType=DECIMAL}, #{celular,jdbcType=NCHAR}, 
        #{apellidos,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.duoc.domain.Apoderado">
        insert into APODERADO
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="idapoderado != null">
                IDAPODERADO,
            </if>
            <if test="nombre != null">
                NOMBRE,
            </if>
            <if test="rut != null">
                RUT,
            </if>
            <if test="direccion != null">
                DIRECCION,
            </if>
            <if test="telefono != null">
                TELEFONO,
            </if>
            <if test="celular != null">
                CELULAR,
            </if>
            <if test="apellidos != null">
                APELLIDOS,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="idapoderado != null">
                #{idapoderado,jdbcType=DECIMAL},
            </if>
            <if test="nombre != null">
                #{nombre,jdbcType=VARCHAR},
            </if>
            <if test="rut != null">
                #{rut,jdbcType=NCHAR},
            </if>
            <if test="direccion != null">
                #{direccion,jdbcType=VARCHAR},
            </if>
            <if test="telefono != null">
                #{telefono,jdbcType=DECIMAL},
            </if>
            <if test="celular != null">
                #{celular,jdbcType=NCHAR},
            </if>
            <if test="apellidos != null">
                #{apellidos,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.duoc.domain.ApoderadoCriteria" resultType="java.lang.Long">
        select count(*) from APODERADO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update APODERADO
        <set>
            <if test="record.idapoderado != null">
                IDAPODERADO = #{record.idapoderado,jdbcType=DECIMAL},
            </if>
            <if test="record.nombre != null">
                NOMBRE = #{record.nombre,jdbcType=VARCHAR},
            </if>
            <if test="record.rut != null">
                RUT = #{record.rut,jdbcType=NCHAR},
            </if>
            <if test="record.direccion != null">
                DIRECCION = #{record.direccion,jdbcType=VARCHAR},
            </if>
            <if test="record.telefono != null">
                TELEFONO = #{record.telefono,jdbcType=DECIMAL},
            </if>
            <if test="record.celular != null">
                CELULAR = #{record.celular,jdbcType=NCHAR},
            </if>
            <if test="record.apellidos != null">
                APELLIDOS = #{record.apellidos,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update APODERADO
        set IDAPODERADO = #{record.idapoderado,jdbcType=DECIMAL},
        NOMBRE = #{record.nombre,jdbcType=VARCHAR},
        RUT = #{record.rut,jdbcType=NCHAR},
        DIRECCION = #{record.direccion,jdbcType=VARCHAR},
        TELEFONO = #{record.telefono,jdbcType=DECIMAL},
        CELULAR = #{record.celular,jdbcType=NCHAR},
        APELLIDOS = #{record.apellidos,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.duoc.domain.Apoderado">
        update APODERADO
        <set>
            <if test="nombre != null">
                NOMBRE = #{nombre,jdbcType=VARCHAR},
            </if>
            <if test="rut != null">
                RUT = #{rut,jdbcType=NCHAR},
            </if>
            <if test="direccion != null">
                DIRECCION = #{direccion,jdbcType=VARCHAR},
            </if>
            <if test="telefono != null">
                TELEFONO = #{telefono,jdbcType=DECIMAL},
            </if>
            <if test="celular != null">
                CELULAR = #{celular,jdbcType=NCHAR},
            </if>
            <if test="apellidos != null">
                APELLIDOS = #{apellidos,jdbcType=VARCHAR},
            </if>
        </set>
        where IDAPODERADO = #{idapoderado,jdbcType=DECIMAL}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.duoc.domain.Apoderado">
        update APODERADO
        set NOMBRE = #{nombre,jdbcType=VARCHAR},
        RUT = #{rut,jdbcType=NCHAR},
        DIRECCION = #{direccion,jdbcType=VARCHAR},
        TELEFONO = #{telefono,jdbcType=DECIMAL},
        CELULAR = #{celular,jdbcType=NCHAR},
        APELLIDOS = #{apellidos,jdbcType=VARCHAR}
        where IDAPODERADO = #{idapoderado,jdbcType=DECIMAL}
    </update>
</mapper>