<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duoc.mappers.CuentacursoMapper">
    <resultMap id="BaseResultMap" type="com.duoc.domain.Cuentacurso">
        <id column="IDCUENTACURSO" jdbcType="DECIMAL" property="idcuentacurso" />
        <result column="IDCURSO" jdbcType="DECIMAL" property="idcurso" />
        <result column="SALDO" jdbcType="DECIMAL" property="saldo" />
        <result column="NOMBRE" jdbcType="VARCHAR" property="nombre" />
        <result column="DESCRIPCION" jdbcType="VARCHAR" property="descripcion" />
        <result column="ENCARGADO" jdbcType="VARCHAR" property="encargado" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        IDCUENTACURSO, IDCURSO, SALDO, NOMBRE, DESCRIPCION, ENCARGADO
    </sql>
    <select id="selectByExample" parameterType="com.duoc.domain.CuentacursoCriteria" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from CUENTACURSO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="com.duoc.domain.CuentacursoKey" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from CUENTACURSO
        where IDCUENTACURSO = #{idcuentacurso,jdbcType=DECIMAL}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.duoc.domain.CuentacursoKey">
        delete from CUENTACURSO
        where IDCUENTACURSO = #{idcuentacurso,jdbcType=DECIMAL}
    </delete>
    <delete id="deleteByExample" parameterType="com.duoc.domain.CuentacursoCriteria">
        delete from CUENTACURSO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.duoc.domain.Cuentacurso">
        insert into CUENTACURSO (IDCUENTACURSO, IDCURSO, SALDO, 
        NOMBRE, DESCRIPCION, ENCARGADO
        )
        values (#{idcuentacurso,jdbcType=DECIMAL}, #{idcurso,jdbcType=DECIMAL}, #{saldo,jdbcType=DECIMAL}, 
        #{nombre,jdbcType=VARCHAR}, #{descripcion,jdbcType=VARCHAR}, #{encargado,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.duoc.domain.Cuentacurso">
        insert into CUENTACURSO
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="idcuentacurso != null">
                IDCUENTACURSO,
            </if>
            <if test="idcurso != null">
                IDCURSO,
            </if>
            <if test="saldo != null">
                SALDO,
            </if>
            <if test="nombre != null">
                NOMBRE,
            </if>
            <if test="descripcion != null">
                DESCRIPCION,
            </if>
            <if test="encargado != null">
                ENCARGADO,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="idcuentacurso != null">
                #{idcuentacurso,jdbcType=DECIMAL},
            </if>
            <if test="idcurso != null">
                #{idcurso,jdbcType=DECIMAL},
            </if>
            <if test="saldo != null">
                #{saldo,jdbcType=DECIMAL},
            </if>
            <if test="nombre != null">
                #{nombre,jdbcType=VARCHAR},
            </if>
            <if test="descripcion != null">
                #{descripcion,jdbcType=VARCHAR},
            </if>
            <if test="encargado != null">
                #{encargado,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.duoc.domain.CuentacursoCriteria" resultType="java.lang.Long">
        select count(*) from CUENTACURSO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update CUENTACURSO
        <set>
            <if test="record.idcuentacurso != null">
                IDCUENTACURSO = #{record.idcuentacurso,jdbcType=DECIMAL},
            </if>
            <if test="record.idcurso != null">
                IDCURSO = #{record.idcurso,jdbcType=DECIMAL},
            </if>
            <if test="record.saldo != null">
                SALDO = #{record.saldo,jdbcType=DECIMAL},
            </if>
            <if test="record.nombre != null">
                NOMBRE = #{record.nombre,jdbcType=VARCHAR},
            </if>
            <if test="record.descripcion != null">
                DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR},
            </if>
            <if test="record.encargado != null">
                ENCARGADO = #{record.encargado,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update CUENTACURSO
        set IDCUENTACURSO = #{record.idcuentacurso,jdbcType=DECIMAL},
        IDCURSO = #{record.idcurso,jdbcType=DECIMAL},
        SALDO = #{record.saldo,jdbcType=DECIMAL},
        NOMBRE = #{record.nombre,jdbcType=VARCHAR},
        DESCRIPCION = #{record.descripcion,jdbcType=VARCHAR},
        ENCARGADO = #{record.encargado,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.duoc.domain.Cuentacurso">
        update CUENTACURSO
        <set>
            <if test="idcurso != null">
                IDCURSO = #{idcurso,jdbcType=DECIMAL},
            </if>
            <if test="saldo != null">
                SALDO = #{saldo,jdbcType=DECIMAL},
            </if>
            <if test="nombre != null">
                NOMBRE = #{nombre,jdbcType=VARCHAR},
            </if>
            <if test="descripcion != null">
                DESCRIPCION = #{descripcion,jdbcType=VARCHAR},
            </if>
            <if test="encargado != null">
                ENCARGADO = #{encargado,jdbcType=VARCHAR},
            </if>
        </set>
        where IDCUENTACURSO = #{idcuentacurso,jdbcType=DECIMAL}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.duoc.domain.Cuentacurso">
        update CUENTACURSO
        set IDCURSO = #{idcurso,jdbcType=DECIMAL},
        SALDO = #{saldo,jdbcType=DECIMAL},
        NOMBRE = #{nombre,jdbcType=VARCHAR},
        DESCRIPCION = #{descripcion,jdbcType=VARCHAR},
        ENCARGADO = #{encargado,jdbcType=VARCHAR}
        where IDCUENTACURSO = #{idcuentacurso,jdbcType=DECIMAL}
    </update>
</mapper>