<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duoc.mappers.ColaboradorMapper">
  <resultMap id="BaseResultMap" type="com.duoc.domain.Colaborador">
    <id column="IDCOLABORADOR" jdbcType="DECIMAL" property="idcolaborador" />
    <result column="NOMBRE" jdbcType="VARCHAR" property="nombre" />
    <result column="DIRECCION" jdbcType="VARCHAR" property="direccion" />
    <result column="TELEFONO" jdbcType="DECIMAL" property="telefono" />
    <result column="IDCUENTAUSUARIO" jdbcType="DECIMAL" property="idcuentausuario" />
    <result column="IDTIPOCOLABORADOR" jdbcType="DECIMAL" property="idtipocolaborador" />
    <result column="RUT" jdbcType="VARCHAR" property="rut" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    IDCOLABORADOR, NOMBRE, DIRECCION, TELEFONO, IDCUENTAUSUARIO, IDTIPOCOLABORADOR, RUT
  </sql>
  <select id="selectByExample" parameterType="com.duoc.domain.ColaboradorCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from COLABORADOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.duoc.domain.ColaboradorKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from COLABORADOR
    where IDCOLABORADOR = #{idcolaborador,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.duoc.domain.ColaboradorKey">
    delete from COLABORADOR
    where IDCOLABORADOR = #{idcolaborador,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.duoc.domain.ColaboradorCriteria">
    delete from COLABORADOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duoc.domain.Colaborador">
    insert into COLABORADOR (IDCOLABORADOR, NOMBRE, DIRECCION, 
      TELEFONO, IDCUENTAUSUARIO, IDTIPOCOLABORADOR, 
      RUT)
    values (#{idcolaborador,jdbcType=DECIMAL}, #{nombre,jdbcType=VARCHAR}, #{direccion,jdbcType=VARCHAR}, 
      #{telefono,jdbcType=DECIMAL}, #{idcuentausuario,jdbcType=DECIMAL}, #{idtipocolaborador,jdbcType=DECIMAL}, 
      #{rut,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.duoc.domain.Colaborador">
    insert into COLABORADOR
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idcolaborador != null">
        IDCOLABORADOR,
      </if>
      <if test="nombre != null">
        NOMBRE,
      </if>
      <if test="direccion != null">
        DIRECCION,
      </if>
      <if test="telefono != null">
        TELEFONO,
      </if>
      <if test="idcuentausuario != null">
        IDCUENTAUSUARIO,
      </if>
      <if test="idtipocolaborador != null">
        IDTIPOCOLABORADOR,
      </if>
      <if test="rut != null">
        RUT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idcolaborador != null">
        #{idcolaborador,jdbcType=DECIMAL},
      </if>
      <if test="nombre != null">
        #{nombre,jdbcType=VARCHAR},
      </if>
      <if test="direccion != null">
        #{direccion,jdbcType=VARCHAR},
      </if>
      <if test="telefono != null">
        #{telefono,jdbcType=DECIMAL},
      </if>
      <if test="idcuentausuario != null">
        #{idcuentausuario,jdbcType=DECIMAL},
      </if>
      <if test="idtipocolaborador != null">
        #{idtipocolaborador,jdbcType=DECIMAL},
      </if>
      <if test="rut != null">
        #{rut,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duoc.domain.ColaboradorCriteria" resultType="java.lang.Long">
    select count(*) from COLABORADOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update COLABORADOR
    <set>
      <if test="record.idcolaborador != null">
        IDCOLABORADOR = #{record.idcolaborador,jdbcType=DECIMAL},
      </if>
      <if test="record.nombre != null">
        NOMBRE = #{record.nombre,jdbcType=VARCHAR},
      </if>
      <if test="record.direccion != null">
        DIRECCION = #{record.direccion,jdbcType=VARCHAR},
      </if>
      <if test="record.telefono != null">
        TELEFONO = #{record.telefono,jdbcType=DECIMAL},
      </if>
      <if test="record.idcuentausuario != null">
        IDCUENTAUSUARIO = #{record.idcuentausuario,jdbcType=DECIMAL},
      </if>
      <if test="record.idtipocolaborador != null">
        IDTIPOCOLABORADOR = #{record.idtipocolaborador,jdbcType=DECIMAL},
      </if>
      <if test="record.rut != null">
        RUT = #{record.rut,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update COLABORADOR
    set IDCOLABORADOR = #{record.idcolaborador,jdbcType=DECIMAL},
      NOMBRE = #{record.nombre,jdbcType=VARCHAR},
      DIRECCION = #{record.direccion,jdbcType=VARCHAR},
      TELEFONO = #{record.telefono,jdbcType=DECIMAL},
      IDCUENTAUSUARIO = #{record.idcuentausuario,jdbcType=DECIMAL},
      IDTIPOCOLABORADOR = #{record.idtipocolaborador,jdbcType=DECIMAL},
      RUT = #{record.rut,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duoc.domain.Colaborador">
    update COLABORADOR
    <set>
      <if test="nombre != null">
        NOMBRE = #{nombre,jdbcType=VARCHAR},
      </if>
      <if test="direccion != null">
        DIRECCION = #{direccion,jdbcType=VARCHAR},
      </if>
      <if test="telefono != null">
        TELEFONO = #{telefono,jdbcType=DECIMAL},
      </if>
      <if test="idcuentausuario != null">
        IDCUENTAUSUARIO = #{idcuentausuario,jdbcType=DECIMAL},
      </if>
      <if test="idtipocolaborador != null">
        IDTIPOCOLABORADOR = #{idtipocolaborador,jdbcType=DECIMAL},
      </if>
      <if test="rut != null">
        RUT = #{rut,jdbcType=VARCHAR},
      </if>
    </set>
    where IDCOLABORADOR = #{idcolaborador,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duoc.domain.Colaborador">
    update COLABORADOR
    set NOMBRE = #{nombre,jdbcType=VARCHAR},
      DIRECCION = #{direccion,jdbcType=VARCHAR},
      TELEFONO = #{telefono,jdbcType=DECIMAL},
      IDCUENTAUSUARIO = #{idcuentausuario,jdbcType=DECIMAL},
      IDTIPOCOLABORADOR = #{idtipocolaborador,jdbcType=DECIMAL},
      RUT = #{rut,jdbcType=VARCHAR}
    where IDCOLABORADOR = #{idcolaborador,jdbcType=DECIMAL}
  </update>
</mapper>