<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duoc.mappers.ContratoMapper">
    <resultMap id="BaseResultMap" type="com.duoc.domain.Contrato">
        <id column="IDCONTRATO" jdbcType="DECIMAL" property="idcontrato" />
        <result column="IDALUMNO" jdbcType="DECIMAL" property="idalumno" />
        <result column="IDCOLABORADOR" jdbcType="DECIMAL" property="idcolaborador" />
        <result column="IDTIPOCONTRATO" jdbcType="DECIMAL" property="idtipocontrato" />
        <result column="IDPOLIZASEGUROS" jdbcType="DECIMAL" property="idpolizaseguros" />
        <result column="FECHAINICIO" jdbcType="TIMESTAMP" property="fechainicio" />
        <result column="FECHATERMINO" jdbcType="TIMESTAMP" property="fechatermino" />
        <result column="IDSERVICIO" jdbcType="DECIMAL" property="idservicio" />
        <result column="NOMBRE" jdbcType="VARCHAR" property="nombre" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        IDCONTRATO, IDALUMNO, IDCOLABORADOR, IDTIPOCONTRATO, IDPOLIZASEGUROS, FECHAINICIO, 
        FECHATERMINO, IDSERVICIO, NOMBRE
    </sql>
    <select id="selectByExample" parameterType="com.duoc.domain.ContratoCriteria" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from CONTRATO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="com.duoc.domain.ContratoKey" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from CONTRATO
        where IDCONTRATO = #{idcontrato,jdbcType=DECIMAL}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.duoc.domain.ContratoKey">
        delete from CONTRATO
        where IDCONTRATO = #{idcontrato,jdbcType=DECIMAL}
    </delete>
    <delete id="deleteByExample" parameterType="com.duoc.domain.ContratoCriteria">
        delete from CONTRATO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.duoc.domain.Contrato">
        insert into CONTRATO (IDCONTRATO, IDALUMNO, IDCOLABORADOR, 
        IDTIPOCONTRATO, IDPOLIZASEGUROS, FECHAINICIO, 
        FECHATERMINO, IDSERVICIO, NOMBRE
        )
        values (#{idcontrato,jdbcType=DECIMAL}, #{idalumno,jdbcType=DECIMAL}, #{idcolaborador,jdbcType=DECIMAL}, 
        #{idtipocontrato,jdbcType=DECIMAL}, #{idpolizaseguros,jdbcType=DECIMAL}, #{fechainicio,jdbcType=TIMESTAMP}, 
        #{fechatermino,jdbcType=TIMESTAMP}, #{idservicio,jdbcType=DECIMAL}, #{nombre,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.duoc.domain.Contrato">
        insert into CONTRATO
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="idcontrato != null">
                IDCONTRATO,
            </if>
            <if test="idalumno != null">
                IDALUMNO,
            </if>
            <if test="idcolaborador != null">
                IDCOLABORADOR,
            </if>
            <if test="idtipocontrato != null">
                IDTIPOCONTRATO,
            </if>
            <if test="idpolizaseguros != null">
                IDPOLIZASEGUROS,
            </if>
            <if test="fechainicio != null">
                FECHAINICIO,
            </if>
            <if test="fechatermino != null">
                FECHATERMINO,
            </if>
            <if test="idservicio != null">
                IDSERVICIO,
            </if>
            <if test="nombre != null">
                NOMBRE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="idcontrato != null">
                #{idcontrato,jdbcType=DECIMAL},
            </if>
            <if test="idalumno != null">
                #{idalumno,jdbcType=DECIMAL},
            </if>
            <if test="idcolaborador != null">
                #{idcolaborador,jdbcType=DECIMAL},
            </if>
            <if test="idtipocontrato != null">
                #{idtipocontrato,jdbcType=DECIMAL},
            </if>
            <if test="idpolizaseguros != null">
                #{idpolizaseguros,jdbcType=DECIMAL},
            </if>
            <if test="fechainicio != null">
                #{fechainicio,jdbcType=TIMESTAMP},
            </if>
            <if test="fechatermino != null">
                #{fechatermino,jdbcType=TIMESTAMP},
            </if>
            <if test="idservicio != null">
                #{idservicio,jdbcType=DECIMAL},
            </if>
            <if test="nombre != null">
                #{nombre,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.duoc.domain.ContratoCriteria" resultType="java.lang.Long">
        select count(*) from CONTRATO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update CONTRATO
        <set>
            <if test="record.idcontrato != null">
                IDCONTRATO = #{record.idcontrato,jdbcType=DECIMAL},
            </if>
            <if test="record.idalumno != null">
                IDALUMNO = #{record.idalumno,jdbcType=DECIMAL},
            </if>
            <if test="record.idcolaborador != null">
                IDCOLABORADOR = #{record.idcolaborador,jdbcType=DECIMAL},
            </if>
            <if test="record.idtipocontrato != null">
                IDTIPOCONTRATO = #{record.idtipocontrato,jdbcType=DECIMAL},
            </if>
            <if test="record.idpolizaseguros != null">
                IDPOLIZASEGUROS = #{record.idpolizaseguros,jdbcType=DECIMAL},
            </if>
            <if test="record.fechainicio != null">
                FECHAINICIO = #{record.fechainicio,jdbcType=TIMESTAMP},
            </if>
            <if test="record.fechatermino != null">
                FECHATERMINO = #{record.fechatermino,jdbcType=TIMESTAMP},
            </if>
            <if test="record.idservicio != null">
                IDSERVICIO = #{record.idservicio,jdbcType=DECIMAL},
            </if>
            <if test="record.nombre != null">
                NOMBRE = #{record.nombre,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update CONTRATO
        set IDCONTRATO = #{record.idcontrato,jdbcType=DECIMAL},
        IDALUMNO = #{record.idalumno,jdbcType=DECIMAL},
        IDCOLABORADOR = #{record.idcolaborador,jdbcType=DECIMAL},
        IDTIPOCONTRATO = #{record.idtipocontrato,jdbcType=DECIMAL},
        IDPOLIZASEGUROS = #{record.idpolizaseguros,jdbcType=DECIMAL},
        FECHAINICIO = #{record.fechainicio,jdbcType=TIMESTAMP},
        FECHATERMINO = #{record.fechatermino,jdbcType=TIMESTAMP},
        IDSERVICIO = #{record.idservicio,jdbcType=DECIMAL},
        NOMBRE = #{record.nombre,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.duoc.domain.Contrato">
        update CONTRATO
        <set>
            <if test="idalumno != null">
                IDALUMNO = #{idalumno,jdbcType=DECIMAL},
            </if>
            <if test="idcolaborador != null">
                IDCOLABORADOR = #{idcolaborador,jdbcType=DECIMAL},
            </if>
            <if test="idtipocontrato != null">
                IDTIPOCONTRATO = #{idtipocontrato,jdbcType=DECIMAL},
            </if>
            <if test="idpolizaseguros != null">
                IDPOLIZASEGUROS = #{idpolizaseguros,jdbcType=DECIMAL},
            </if>
            <if test="fechainicio != null">
                FECHAINICIO = #{fechainicio,jdbcType=TIMESTAMP},
            </if>
            <if test="fechatermino != null">
                FECHATERMINO = #{fechatermino,jdbcType=TIMESTAMP},
            </if>
            <if test="idservicio != null">
                IDSERVICIO = #{idservicio,jdbcType=DECIMAL},
            </if>
            <if test="nombre != null">
                NOMBRE = #{nombre,jdbcType=VARCHAR},
            </if>
        </set>
        where IDCONTRATO = #{idcontrato,jdbcType=DECIMAL}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.duoc.domain.Contrato">
        update CONTRATO
        set IDALUMNO = #{idalumno,jdbcType=DECIMAL},
        IDCOLABORADOR = #{idcolaborador,jdbcType=DECIMAL},
        IDTIPOCONTRATO = #{idtipocontrato,jdbcType=DECIMAL},
        IDPOLIZASEGUROS = #{idpolizaseguros,jdbcType=DECIMAL},
        FECHAINICIO = #{fechainicio,jdbcType=TIMESTAMP},
        FECHATERMINO = #{fechatermino,jdbcType=TIMESTAMP},
        IDSERVICIO = #{idservicio,jdbcType=DECIMAL},
        NOMBRE = #{nombre,jdbcType=VARCHAR}
        where IDCONTRATO = #{idcontrato,jdbcType=DECIMAL}
    </update>
</mapper>